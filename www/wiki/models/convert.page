<?npl
--[[
Title: data migrate
Author: wuxiangan
Date: 2018/07/06
]]

include_once("./abstract/base.page")
include_once("./user.page")
include_once("./user_three_service.page")
include_once("./website.page")
include_once("./site_data_source.page")
include_once("./group.page")
include_once("./site_group.page")
include_once("./site_user.page")

local convert = inherit(models.abstract.base, gettable("models.convert"))

local coreService = KEEPWORK["config"]["default"]["coreService"]
local baseUrl = coreService.baseUrl

function post(tablename, data, isDelete) 
	if not data then return end

	local form = {
		tablename = tablename,
		token = coreService.token,
		id = data._id,
		data =data,
	}
	
	local url = baseUrl .. "convert/data"

	if isDelete then url = baseUrl .. "convert/deleteData" end

	System.os.GetUrl({
		url = url,
		method = "POST",
		form = form,
		json = true,
	}, resume)

	local _, data = yield()
	log(data)
end

function convert:api_users(data, isDelete) 
	post("users", data, isDelete)
end

function convert:api_usersByUsername(username, isDelete) 
	local userDB = models.user:new()
	userDB:db():findOne({["+username"]={username}}, resume)
	local _, userinfo = yield()
	post("users", userinfo, isDelete)

end

function convert:api_sites(data, isDelete)
	post("sites", data, isDelete)
end

function convert:api_groups(data, isDelete)
	post("groups", data, isDelete)
end

function convert:api_groupMembers(data, isDelete) 
	post("groupMembers", data, isDelete)
end

function convert:api_siteGroups(data, isDelete)
	post("siteGroups", data, isDelete)
end
